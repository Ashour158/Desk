services:
  # Django Web Service
  - type: web
    name: helpdesk-django
    env: python
    plan: starter
    buildCommand: |
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
      python manage.py migrate
    startCommand: gunicorn config.wsgi:application
    healthCheckPath: /health/
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: config.settings.production
      - key: SECRET_KEY
        generateValue: true
      - key: DATABASE_URL
        fromDatabase:
          name: helpdesk-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: helpdesk-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: helpdesk-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: helpdesk-redis
          property: connectionString
      - key: ALLOWED_HOSTS
        value: helpdesk.onrender.com
      - key: CORS_ALLOWED_ORIGINS
        value: https://helpdesk.onrender.com
      - key: EMAIL_BACKEND
        value: django.core.mail.backends.smtp.EmailBackend
      - key: EMAIL_HOST
        value: smtp.sendgrid.net
      - key: EMAIL_PORT
        value: 587
      - key: EMAIL_USE_TLS
        value: "True"
      - key: EMAIL_HOST_USER
        value: apikey
      - key: EMAIL_HOST_PASSWORD
        sync: false
      - key: SECURE_SSL_REDIRECT
        value: "True"
      - key: SECURE_HSTS_SECONDS
        value: "31536000"
      - key: SECURE_HSTS_INCLUDE_SUBDOMAINS
        value: "True"
      - key: SECURE_HSTS_PRELOAD
        value: "True"
      - key: SESSION_COOKIE_SECURE
        value: "True"
      - key: SESSION_COOKIE_HTTPONLY
        value: "True"
      - key: SESSION_COOKIE_SAMESITE
        value: "Strict"
      - key: CSRF_COOKIE_SECURE
        value: "True"
      - key: CSRF_COOKIE_HTTPONLY
        value: "True"
      - key: CSRF_COOKIE_SAMESITE
        value: "Strict"
      - key: SECURE_CONTENT_TYPE_NOSNIFF
        value: "True"
      - key: SECURE_BROWSER_XSS_FILTER
        value: "True"
      - key: X_FRAME_OPTIONS
        value: "DENY"
      - key: SECURE_REFERRER_POLICY
        value: "strict-origin-when-cross-origin"
      - key: FILE_UPLOAD_MAX_MEMORY_SIZE
        value: "10485760"  # 10MB
      - key: DATA_UPLOAD_MAX_MEMORY_SIZE
        value: "10485760"  # 10MB
      - key: CONN_MAX_AGE
        value: "600"
      - key: HEALTH_CHECK_ENABLED
        value: "True"
      - key: HEALTH_CHECK_URL
        value: "/health/"

  # Celery Worker
  - type: worker
    name: helpdesk-celery
    env: python
    plan: starter
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A config worker -l info
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: config.settings.production
      - key: SECRET_KEY
        fromService:
          type: web
          name: helpdesk-django
          envVarKey: SECRET_KEY
      - key: DATABASE_URL
        fromDatabase:
          name: helpdesk-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: helpdesk-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: helpdesk-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: helpdesk-redis
          property: connectionString
      - key: SECURE_SSL_REDIRECT
        value: "True"
      - key: SECURE_HSTS_SECONDS
        value: "31536000"
      - key: SESSION_COOKIE_SECURE
        value: "True"
      - key: SESSION_COOKIE_HTTPONLY
        value: "True"
      - key: SESSION_COOKIE_SAMESITE
        value: "Strict"
      - key: CSRF_COOKIE_SECURE
        value: "True"
      - key: CSRF_COOKIE_HTTPONLY
        value: "True"
      - key: CSRF_COOKIE_SAMESITE
        value: "Strict"
      - key: CONN_MAX_AGE
        value: "600"

  # Celery Beat (Scheduler)
  - type: worker
    name: helpdesk-celery-beat
    env: python
    plan: starter
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A config beat -l info
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: config.settings.production
      - key: SECRET_KEY
        fromService:
          type: web
          name: helpdesk-django
          envVarKey: SECRET_KEY
      - key: DATABASE_URL
        fromDatabase:
          name: helpdesk-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: helpdesk-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: helpdesk-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: helpdesk-redis
          property: connectionString
      - key: SECURE_SSL_REDIRECT
        value: "True"
      - key: SECURE_HSTS_SECONDS
        value: "31536000"
      - key: SESSION_COOKIE_SECURE
        value: "True"
      - key: SESSION_COOKIE_HTTPONLY
        value: "True"
      - key: SESSION_COOKIE_SAMESITE
        value: "Strict"
      - key: CSRF_COOKIE_SECURE
        value: "True"
      - key: CSRF_COOKIE_HTTPONLY
        value: "True"
      - key: CSRF_COOKIE_SAMESITE
        value: "Strict"
      - key: CONN_MAX_AGE
        value: "600"

databases:
  # PostgreSQL Database
  - name: helpdesk-postgres
    plan: starter
    databaseName: helpdesk
    user: helpdesk_user

  # Redis Cache
  - name: helpdesk-redis
    plan: starter
    type: redis
