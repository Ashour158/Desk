"""
Enhanced Advanced Analytics & Business Intelligence initial migration.
"""

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("organizations", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DataSciencePlatform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "platform_type",
                    models.CharField(
                        choices=[
                            ("ml_model_builder", "ML Model Builder"),
                            ("statistical_analysis", "Statistical Analysis Tools"),
                            ("data_visualization", "Data Visualization Studio"),
                            ("predictive_modeling", "Predictive Modeling Interface"),
                            ("ab_testing", "A/B Testing Framework"),
                            ("data_mining", "Data Mining Tools"),
                            ("machine_learning", "Machine Learning Platform"),
                            ("deep_learning", "Deep Learning Platform"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("data_sources", models.JSONField(default=list)),
                ("ml_frameworks", models.JSONField(default=list)),
                ("supported_algorithms", models.JSONField(default=list)),
                ("compute_resources", models.JSONField(default=dict)),
                ("model_accuracy", models.FloatField(default=0.0)),
                ("training_speed", models.FloatField(default=0.0)),
                ("inference_speed", models.FloatField(default=0.0)),
                ("resource_utilization", models.FloatField(default=0.0)),
                ("total_models", models.IntegerField(default=0)),
                ("active_models", models.IntegerField(default=0)),
                ("total_predictions", models.IntegerField(default=0)),
                ("successful_predictions", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("is_training", models.BooleanField(default=False)),
                ("last_training", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_science_platforms",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Data Science Platform",
                "verbose_name_plural": "Data Science Platforms",
                "unique_together": {("organization", "name", "platform_type")},
            },
        ),
        migrations.CreateModel(
            name="RealTimeAnalyticsEngine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "engine_type",
                    models.CharField(
                        choices=[
                            ("live_dashboard", "Live Dashboard Updates"),
                            ("real_time_alerts", "Real-time Alerts & Notifications"),
                            ("streaming_processing", "Streaming Data Processing"),
                            ("event_driven", "Event-driven Analytics"),
                            ("instant_insights", "Instant Insights Generation"),
                            ("real_time_ml", "Real-time Machine Learning"),
                            ("stream_analytics", "Stream Analytics"),
                            ("complex_event_processing", "Complex Event Processing"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("data_streams", models.JSONField(default=list)),
                ("processing_rules", models.JSONField(default=list)),
                ("alert_conditions", models.JSONField(default=list)),
                ("output_destinations", models.JSONField(default=list)),
                ("processing_latency", models.FloatField(default=0.0)),
                ("throughput", models.FloatField(default=0.0)),
                ("accuracy", models.FloatField(default=0.0)),
                ("availability", models.FloatField(default=0.0)),
                ("total_events_processed", models.IntegerField(default=0)),
                ("active_streams", models.IntegerField(default=0)),
                ("alerts_generated", models.IntegerField(default=0)),
                ("insights_generated", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("is_processing", models.BooleanField(default=False)),
                ("last_processing", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="real_time_analytics",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Real-time Analytics Engine",
                "verbose_name_plural": "Real-time Analytics Engines",
                "unique_together": {("organization", "name", "engine_type")},
            },
        ),
        migrations.CreateModel(
            name="AdvancedReportingSuite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "reporting_type",
                    models.CharField(
                        choices=[
                            ("automated_reports", "Automated Report Generation"),
                            ("interactive_builder", "Interactive Report Builder"),
                            ("scheduled_reports", "Scheduled Report Distribution"),
                            ("white_label", "White-label Reporting"),
                            ("mobile_reports", "Mobile Report Access"),
                            ("real_time_reports", "Real-time Reports"),
                            ("custom_dashboards", "Custom Dashboards"),
                            ("data_exports", "Data Exports"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("report_templates", models.JSONField(default=list)),
                ("data_sources", models.JSONField(default=list)),
                ("distribution_channels", models.JSONField(default=list)),
                ("export_formats", models.JSONField(default=list)),
                ("report_generation_time", models.FloatField(default=0.0)),
                ("report_accuracy", models.FloatField(default=0.0)),
                ("user_satisfaction", models.FloatField(default=0.0)),
                ("delivery_success_rate", models.FloatField(default=0.0)),
                ("total_reports", models.IntegerField(default=0)),
                ("scheduled_reports", models.IntegerField(default=0)),
                ("report_views", models.IntegerField(default=0)),
                ("exports_generated", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("is_generating", models.BooleanField(default=False)),
                ("last_generation", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reporting_suites",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Advanced Reporting Suite",
                "verbose_name_plural": "Advanced Reporting Suites",
                "unique_together": {("organization", "name", "reporting_type")},
            },
        ),
        migrations.CreateModel(
            name="BusinessIntelligenceTools",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "bi_type",
                    models.CharField(
                        choices=[
                            ("executive_dashboards", "Executive Dashboards"),
                            ("performance_scorecards", "Performance Scorecards"),
                            ("trend_analysis", "Trend Analysis & Forecasting"),
                            ("comparative_analytics", "Comparative Analytics"),
                            ("strategic_planning", "Strategic Planning Tools"),
                            ("kpi_management", "KPI Management"),
                            ("benchmarking", "Benchmarking Tools"),
                            ("decision_support", "Decision Support Systems"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("dashboard_config", models.JSONField(default=dict)),
                ("kpi_definitions", models.JSONField(default=list)),
                ("data_connections", models.JSONField(default=list)),
                ("visualization_types", models.JSONField(default=list)),
                ("dashboard_load_time", models.FloatField(default=0.0)),
                ("data_freshness", models.FloatField(default=0.0)),
                ("user_engagement", models.FloatField(default=0.0)),
                ("decision_impact", models.FloatField(default=0.0)),
                ("total_dashboards", models.IntegerField(default=0)),
                ("active_users", models.IntegerField(default=0)),
                ("dashboard_views", models.IntegerField(default=0)),
                ("kpi_updates", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("is_updating", models.BooleanField(default=False)),
                ("last_update", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bi_tools",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Business Intelligence Tools",
                "verbose_name_plural": "Business Intelligence Tools",
                "unique_together": {("organization", "name", "bi_type")},
            },
        ),
        migrations.CreateModel(
            name="DataGovernance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "governance_type",
                    models.CharField(
                        choices=[
                            ("data_quality", "Data Quality Management"),
                            ("data_lineage", "Data Lineage Tracking"),
                            ("privacy_impact", "Privacy Impact Assessment"),
                            ("compliance_reporting", "Compliance Reporting"),
                            ("data_security", "Data Security Monitoring"),
                            ("data_catalog", "Data Catalog Management"),
                            ("data_classification", "Data Classification"),
                            ("data_retention", "Data Retention Management"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("governance_policies", models.JSONField(default=list)),
                ("data_classifications", models.JSONField(default=list)),
                ("compliance_standards", models.JSONField(default=list)),
                ("monitoring_rules", models.JSONField(default=list)),
                ("data_quality_score", models.FloatField(default=0.0)),
                ("compliance_rate", models.FloatField(default=0.0)),
                ("policy_adherence", models.FloatField(default=0.0)),
                ("risk_score", models.FloatField(default=0.0)),
                ("total_policies", models.IntegerField(default=0)),
                ("active_monitoring", models.IntegerField(default=0)),
                ("compliance_checks", models.IntegerField(default=0)),
                ("violations_detected", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("is_monitoring", models.BooleanField(default=False)),
                ("last_monitoring", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_governance",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Data Governance",
                "verbose_name_plural": "Data Governance",
                "unique_together": {("organization", "name", "governance_type")},
            },
        ),
        migrations.CreateModel(
            name="AnalyticsModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "model_type",
                    models.CharField(
                        choices=[
                            ("classification", "Classification"),
                            ("regression", "Regression"),
                            ("clustering", "Clustering"),
                            ("anomaly_detection", "Anomaly Detection"),
                            ("recommendation", "Recommendation"),
                            ("forecasting", "Forecasting"),
                            ("nlp", "Natural Language Processing"),
                            ("computer_vision", "Computer Vision"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("training", "Training"),
                            ("trained", "Trained"),
                            ("deployed", "Deployed"),
                            ("retired", "Retired"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("algorithm", models.CharField(max_length=100)),
                ("hyperparameters", models.JSONField(default=dict)),
                ("training_data", models.JSONField(default=dict)),
                ("validation_data", models.JSONField(default=dict)),
                ("accuracy", models.FloatField(default=0.0)),
                ("precision", models.FloatField(default=0.0)),
                ("recall", models.FloatField(default=0.0)),
                ("f1_score", models.FloatField(default=0.0)),
                ("auc_score", models.FloatField(default=0.0)),
                ("total_predictions", models.IntegerField(default=0)),
                ("successful_predictions", models.IntegerField(default=0)),
                ("failed_predictions", models.IntegerField(default=0)),
                ("last_prediction", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_models",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Analytics Model",
                "verbose_name_plural": "Analytics Models",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsDashboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "dashboard_type",
                    models.CharField(
                        choices=[
                            ("executive", "Executive Dashboard"),
                            ("operational", "Operational Dashboard"),
                            ("analytical", "Analytical Dashboard"),
                            ("real_time", "Real-time Dashboard"),
                            ("mobile", "Mobile Dashboard"),
                            ("custom", "Custom Dashboard"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("layout_config", models.JSONField(default=dict)),
                ("widgets", models.JSONField(default=list)),
                ("data_sources", models.JSONField(default=list)),
                ("refresh_interval", models.IntegerField(default=300)),
                ("load_time", models.FloatField(default=0.0)),
                ("user_engagement", models.FloatField(default=0.0)),
                ("data_freshness", models.FloatField(default=0.0)),
                ("error_rate", models.FloatField(default=0.0)),
                ("total_views", models.IntegerField(default=0)),
                ("unique_users", models.IntegerField(default=0)),
                ("last_viewed", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_public", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_dashboards",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Analytics Dashboard",
                "verbose_name_plural": "Analytics Dashboards",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled Report"),
                            ("ad_hoc", "Ad-hoc Report"),
                            ("automated", "Automated Report"),
                            ("interactive", "Interactive Report"),
                            ("export", "Export Report"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("report_config", models.JSONField(default=dict)),
                ("data_queries", models.JSONField(default=list)),
                ("visualization_config", models.JSONField(default=dict)),
                ("distribution_config", models.JSONField(default=dict)),
                ("generation_time", models.FloatField(default=0.0)),
                ("file_size", models.FloatField(default=0.0)),
                ("accuracy", models.FloatField(default=0.0)),
                ("user_satisfaction", models.FloatField(default=0.0)),
                ("total_generations", models.IntegerField(default=0)),
                ("total_downloads", models.IntegerField(default=0)),
                ("last_generated", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_scheduled", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_reports",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Analytics Report",
                "verbose_name_plural": "Analytics Reports",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("threshold", "Threshold Alert"),
                            ("anomaly", "Anomaly Alert"),
                            ("trend", "Trend Alert"),
                            ("performance", "Performance Alert"),
                            ("data_quality", "Data Quality Alert"),
                            ("compliance", "Compliance Alert"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("trigger_conditions", models.JSONField(default=list)),
                ("notification_channels", models.JSONField(default=list)),
                ("escalation_rules", models.JSONField(default=list)),
                ("suppression_rules", models.JSONField(default=list)),
                ("alert_accuracy", models.FloatField(default=0.0)),
                ("response_time", models.FloatField(default=0.0)),
                ("false_positive_rate", models.FloatField(default=0.0)),
                ("resolution_time", models.FloatField(default=0.0)),
                ("total_alerts", models.IntegerField(default=0)),
                ("active_alerts", models.IntegerField(default=0)),
                ("resolved_alerts", models.IntegerField(default=0)),
                ("last_triggered", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_alerts",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Analytics Alert",
                "verbose_name_plural": "Analytics Alerts",
                "ordering": ["-created_at"],
            },
        ),
    ]
