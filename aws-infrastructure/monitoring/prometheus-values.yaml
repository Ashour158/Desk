# Prometheus Helm Chart Values for Helpdesk Platform Monitoring

# Prometheus configuration
prometheus:
  prometheusSpec:
    retention: 30d
    retentionSize: 50GB
    resources:
      requests:
        memory: 2Gi
        cpu: 1000m
      limits:
        memory: 4Gi
        cpu: 2000m
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: gp3
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 100Gi
    serviceMonitorSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    additionalScrapeConfigs:
      - job_name: 'django-app'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - helpdesk
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: django-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http
      - job_name: 'ai-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - helpdesk
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: ai-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http
      - job_name: 'realtime-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - helpdesk
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: realtime-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http

# Grafana configuration
grafana:
  enabled: true
  adminPassword: "helpdesk-admin-2024"
  persistence:
    enabled: true
    storageClassName: gp3
    size: 10Gi
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      django-dashboard:
        gnetId: 1860
        revision: 1
        datasource: Prometheus
      kubernetes-dashboard:
        gnetId: 7249
        revision: 1
        datasource: Prometheus
      nginx-dashboard:
        gnetId: 12559
        revision: 1
        datasource: Prometheus

# AlertManager configuration
alertmanager:
  enabled: true
  alertmanagerSpec:
    retention: 30d
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 200m
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: gp3
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi

# Node Exporter
nodeExporter:
  enabled: true

# Kube State Metrics
kubeStateMetrics:
  enabled: true

# Service Monitor for Django app
serviceMonitor:
  enabled: true
  labels:
    app: django-app
  namespace: helpdesk
  interval: 30s
  path: /metrics
  port: http

