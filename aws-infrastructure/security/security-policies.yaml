# Security Policies for Helpdesk Platform

# Network Policy - Restrict traffic between pods
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: helpdesk-network-policy
  namespace: helpdesk
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: helpdesk
    - podSelector:
        matchLabels:
          app: django-app
    - podSelector:
        matchLabels:
          app: ai-service
    - podSelector:
        matchLabels:
          app: realtime-service
    - podSelector:
        matchLabels:
          app: celery-worker
    - podSelector:
        matchLabels:
          app: celery-beat
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8001
    - protocol: TCP
      port: 3000
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 80    # HTTP
    - protocol: TCP
      port: 443   # HTTPS
    - protocol: TCP
      port: 53     # DNS
    - protocol: UDP
      port: 53     # DNS

---
# Pod Security Policy
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: helpdesk-psp
  namespace: helpdesk
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'

---
# Security Context Constraints
apiVersion: v1
kind: SecurityContext
metadata:
  name: helpdesk-security-context
  namespace: helpdesk
spec:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

---
# Resource Quotas
apiVersion: v1
kind: ResourceQuota
metadata:
  name: helpdesk-quota
  namespace: helpdesk
spec:
  hard:
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    persistentvolumeclaims: "10"
    services: "10"
    secrets: "20"
    configmaps: "20"

---
# Limit Ranges
apiVersion: v1
kind: LimitRange
metadata:
  name: helpdesk-limits
  namespace: helpdesk
spec:
  limits:
  - default:
      cpu: "1"
      memory: "2Gi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    type: Container
  - max:
      cpu: "2"
      memory: "4Gi"
    min:
      cpu: "100m"
      memory: "128Mi"
    type: Container

---
# Service Account with minimal permissions
apiVersion: v1
kind: ServiceAccount
metadata:
  name: helpdesk-sa
  namespace: helpdesk
automountServiceAccountToken: false

---
# Role for service account
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: helpdesk
  name: helpdesk-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list"]

---
# RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: helpdesk-rolebinding
  namespace: helpdesk
subjects:
- kind: ServiceAccount
  name: helpdesk-sa
  namespace: helpdesk
roleRef:
  kind: Role
  name: helpdesk-role
  apiGroup: rbac.authorization.k8s.io

